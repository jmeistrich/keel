name: Publish SDKs 
run-name: Publish SDKs ${{ inputs.version }} to '${{ inputs.publishTag }}'

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Keel version to publish (e.g. v0.370.0)"
        required: true
        type: string
      publishTag:
        description: "NPM distribution tag"
        required: true
        default: "next"
        type: string
      dryRun:
        description: "true if dry run release, false otherwise"
        required: false
        default: false
        type: boolean

jobs:
  npm_release:
    name: NPM Release Matrix
    runs-on: ubuntu-latest
    strategy:
      matrix:
        package:
          [
            "wasm",
            "functions-runtime",
            "testing-runtime",
            "client-react",
            "client-react-query",
          ]
    steps:
      - uses: actions/setup-go@v3
        with:
          go-version: "1.20"

      - uses: actions/setup-node@v3
        with:
          node-version: 18.12.1
          token: ${{ secrets.NPM_TOKEN }} 

      - uses: pnpm/action-setup@v2.4.0
        with:
          version: 8.10.0

      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: ${{ inputs.version }}
          fetch-depth: 0

      - name: Install Go deps
        run: go mod download

      - name: Generate wasm binary
        if: ${{ matrix.package  == 'wasm' }}
        run: make wasm

      - name: Install ${{ matrix.package }} publish dependencies
        working-directory: ./packages/${{ matrix.package }}
        run: pnpm install --frozen-lockfile

      - name: "Update NPM version ${{ matrix.package }}"
        uses: reedyuk/npm-version@1.2.1
        with:
          version: ${{ inputs.version }}
          package: ./packages/${{ matrix.package }}

      - name: NPM Publish ${{ matrix.package }}
        uses: JS-DevTools/npm-publish@v2
        with:
          token: ${{ secrets.NPM_TOKEN }}
          tag: ${{ inputs.publishTag }}
          package: ./packages/${{ matrix.package }}
          dry-run: ${{ inputs.dryRun }}
          strategy: all
          ignore-scripts: false
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

    outputs:
      version: ${{ inputs.version }}
